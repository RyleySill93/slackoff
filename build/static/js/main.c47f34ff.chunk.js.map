{"version":3,"sources":["khaled.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","state","url","file","style","fileUrl","loading","getContent","doStuff","_this","setState","formData","FormData","append","name","axios","post","concat","window","location","origin","then","res","data","finally","react_default","a","createElement","Fragment","className","height","src","width","require","onClick","_this2","this","openDialog","document","getElementById","click","app","react_router_dom","to","type","id","hidden","onChange","event","target","files","URL","createObjectURL","value","howtoface","href","howtoemoji","react_router","exact","path","component","React","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c47f34ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/khaled.6a36f159.png\";","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone'\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\n\n\nclass App extends React.Component {\n    state = {\n        url: '',\n        file: null,\n        style: 'intensify',\n        fileUrl: '',\n        loading: false,\n    };\n\n    getContent = () => {\n        const doStuff = () => {\n            this.setState({ loading: true });\n            const formData = new FormData();\n            formData.append(\"file\", this.state.file, this.state.file.name);\n            axios.post(`${window.location.origin}/${this.state.style}/`, formData).then(res => {\n                this.setState({ url: res.data.url })\n            })\n                .finally(() => this.setState({ loading: false }));\n        };\n\n        if (this.state.loading) {\n            return (\n                <React.Fragment>\n                    <div/>\n                    <div className=\"loader\">Loading...</div>\n                    <div/>\n                </React.Fragment>\n            )\n        } else if (this.state.url) {\n            return (\n                <React.Fragment>\n                    <div/>\n                    <img style={{ height: 200 }} src={this.state.url} />\n                    <div className=\"another-one\">\n                        <img className=\"dj-khaled\" style={{ width: 100 }} src={require('./khaled.png')} />\n                        <button className=\"button\" onClick={doStuff}>ANOTHER ONE</button>\n                    </div>\n                </React.Fragment>\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <div/>\n                <button className=\"button\" onClick={doStuff}>CLICK ME</button>\n                <div/>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const uploadFile = (file) => {\n            this.setState({ file, fileUrl: URL.createObjectURL(file) });\n        };\n\n        function openDialog() {\n          document.getElementById('upload-photo').click();\n        }\n\n        const app = (\n            <main className=\"App-main\">\n                <div className=\"column\">\n                    <div className=\"step\">1. UPLOAD FACE</div>\n                    <Link className=\"caption\" to=\"/how-to-cut-out-a-face\">how do I get a face cutout from a picture?</Link>\n                    <div className=\"button-holder\">\n                        <input type=\"file\" id=\"upload-photo\" hidden onChange={event => uploadFile(event.target.files[0])} />\n                        {\n                            this.state.file ? (\n                                <React.Fragment>\n                                    <div/>\n                                    <img style={{ height: 200 }} src={this.state.fileUrl} />\n                                    <button className=\"button\" onClick={openDialog}>SEND PICS? ;)</button>\n                                </React.Fragment>\n                            ) : (\n                                <React.Fragment>\n                                    <div/>\n                                    <button className=\"button\" onClick={openDialog}>SEND PICS? ;)</button>\n                                    <div/>\n                                </React.Fragment>\n                            )\n                        }\n                    </div>\n                </div>\n                <div className=\"column column-middle\">\n                    <div className=\"step\">2. SELECT STYLE</div>\n                    <small>&nbsp;</small>\n                    <div className=\"button-holder\">\n                        <div/>\n                        <select className=\"button\" value={this.state.style} onChange={event => this.setState({ style: event.target.value })}>\n                            <option value=\"bobblify\">:BOBBLE:</option>\n                            <option value=\"intensify\">:INTENSIFY:</option>\n                            <option value=\"detective\">:DETECTIVE:</option>\n                            <option value=\"appears\">:APPEARS:</option>\n                            <option value=\"disappears\">:DISAPPEARS:</option>\n                            <option value=\"carlton_dance\">:CARLTON:</option>\n                            <option value=\"rap_battle\">:RAP_BATTLE:</option>\n                            <option value=\"strut\">:STRUT:</option>\n                            <option value=\"trapped\">:LET_ME_IN:</option>\n                            <option value=\"wrecking-ball\">:WRECKING_BALL:</option>\n                            <option value=\"pennywise\">:PENNYWISE:</option>\n                            <option value=\"heres-johnny\">:HERES_JOHNNY:</option>\n                        </select>\n                        <div/>\n                    </div>\n                </div>\n                <div className=\"column\">\n                    <div className=\"step\">3. GENERATE EMOJI</div>\n                    <Link className=\"caption\" to=\"/how-to-upload-an-emoji\">how do I upload an emoji to slack?</Link>\n                    <div className=\"button-holder\">\n                        { this.getContent() }\n                    </div>\n                </div>\n            </main>\n        );\n\n        const howtoface = (\n            <main className=\"help-section\">\n                <img className=\"gif\" src=\"http://i.imgur.com/DHRYpiZ.gif\" />\n                <div className=\"section-title\">\n                    How to cut out a face from a picture\n                </div>\n                <ol>\n                    <li>\n                        Open up your picture in Preview. If you don't have a Mac, start <a href=\"https://shorturl.at/xACM2\">here.</a>\n                    </li>\n                    <li>\n                        Click on the toolbox or pen button the upper right hand corner, then select the lasso tool.\n                    </li>\n                    <img className=\"gif\" src=\"https://media.giphy.com/media/hqljpSlE9NWsCqO94Q/giphy.gif\" />\n                    <li>\n                        Carefully cut the face out of the picture. When you're done, click crop and convert.\n                    </li>\n                    <img className=\"gif\" src=\"https://media.giphy.com/media/dxTpaE9A6TXGdRXb9u/giphy.gif\" />\n                </ol>\n            </main>\n        );\n\n\n        const howtoemoji = (\n            <main className=\"help-section\">\n                <img className=\"gif\" src=\"http://i.imgur.com/DHRYpiZ.gif\" />\n                <div className=\"section-title\">\n                    How to upload an emoji to slack\n                </div>\n\n            </main>\n        );\n\n        return (\n            <Router>\n              <div className=\"App\">\n                <header className=\"header\">\n                    <Link className=\"title\" to=\"/\">\n                        slackoff.\n                    </Link>\n                </header>\n                <Route exact path=\"/\" component={() => app} />\n                <Route path=\"/how-to-cut-out-a-face\" component={ () => howtoface} />\n                <Route path=\"/how-to-upload-an-emoji\" component={ () => howtoemoji} />\n              </div>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}