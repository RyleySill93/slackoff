{"version":3,"sources":["Gif.js","Gifs.js","Button.js","Detail.js","HowToFace.js","Routes.js","NewApp.js","serviceWorker.js","index.js"],"names":["Gif","_this$props","this","props","classes","url","type","width","height","react_default","a","createElement","className","imageHolder","style","minHeight","react_router_dom","to","image","react_lazyload_lib_default","umd_default","src","buttonHolder","Component","withStyles","margin","&:hover div","display","cursor","backgroundColor","borderRadius","position","top","justifyContent","Gifs","require","state","imageUrls","_this2","axios","get","then","res","setState","data","catch","err","lib_default","columnWidth","map","src_Gif","React","button","textAlign","color","border","boxShadow","fontSize","fontFamily","outline","transition","zIndex","&:hover","transform","&:active","Object","assign","children","origin","Detail","files","loading","match","params","concat","_this3","detail","imgWidth","onLoad","dude","ratio","target","naturalHeight","naturalWidth","uploader","targetFace","Forward_default","tagHolder","Chip","tag","label","src_Gifs","alignItems","rightSide","alignSelf","faceUploader","flexDirection","uploadedImage","marginBottom","buttonCaption","textDecoration","marginTop","meow","fontWeight","href","Routes","react_router","path","component","HowToFace","app","header","title","center","Boolean","window","location","hostname","ReactDOM","render","NewApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6be96568.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport { Link } from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core\";\nimport Img from 'react-image'\nimport LazyLoad from 'react-lazyload';\n\nconst styles = {\n    imageHolder: {\n        margin: '8px 8px -2px 8px',\n        '&:hover div': {\n            display: 'flex',\n        },\n        cursor: 'zoom-in',\n        backgroundColor: '#433f4a',\n        borderRadius: 8,\n    },\n    buttonHolder: {\n        height: '100%',\n        width: 250,\n        position: 'absolute',\n        display: 'none',\n        top: 0,\n        justifyContent: 'flex-end',\n        backgroundColor: 'rgba(239, 239, 239, 0.5)',\n        borderRadius: 8,\n    },\n    image: {\n        display: 'block',\n        width: 250,\n        borderRadius: 8,\n    },\n};\n\nclass Gif extends Component {\n    render() {\n        const { classes, url, type, width, height } = this.props;\n\n        return (\n            <div className={classes.imageHolder} style={{ minHeight: height / (width / 250) }}>\n                <Link to={ type }>\n                    <div className={classes.image}>\n                        <LazyLoad>\n                            <Img src={url} className={classes.image} />\n                        </LazyLoad>\n                    </div>\n                    <div className={classes.buttonHolder}>\n                        {/*<Button text=\"generate\" />*/}\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n}\n\n\nexport default withStyles(styles)(Gif);\n","import React from 'react';\nimport './App.css';\nimport {withStyles} from \"@material-ui/core\";\n\nimport axios from 'axios';\nimport Masonry from 'react-masonry-component';\nimport Image from './Gif';\n\n\nvar Jimp = require('jimp');\n\nconst styles = {\n    width: {\n        width: 1100,\n        margin: '0 auto',\n    }\n};\n\nclass Gifs extends React.Component {\n    state = {\n        imageUrls: [],\n    };\n\n    componentDidMount(){\n        axios.get('http://localhost:8000/gifs/types/').then(res => {\n            this.setState({imageUrls: res.data})\n        }).catch(err => {\n            debugger\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.width}>\n                <Masonry columnWidth={100}>\n                    {\n                        this.state.imageUrls.map(image => (\n                            <Image\n                                url={image.url}\n                                type={image.type}\n                                width={image.width}\n                                height={image.height}\n                            />\n                        ))\n                    }\n                </Masonry>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Gifs);\n","import React from 'react';\nimport {withStyles} from \"@material-ui/core\";\n\n\nconst styles = {\n    button: {\n        borderRadius: 3,\n        height: 50,\n        margin: 5,\n        width: 200,\n        textAlign: 'center',\n        backgroundColor: '#efeef1',\n        color: '#433f4a',\n        border: '5px solid #EE7AAA',\n        boxShadow: '0 10px #DB5B90',\n        cursor: 'pointer',\n        fontSize: 24,\n        fontFamily: 'Baloo',\n        outline: 'none',\n        transition: 'transform 0.1s, box-shadow 0.1s',\n        zIndex: 1,\n        '&:hover': {\n            backgroundColor: '#efeef1',\n            color: '#EE7AAA',\n            boxShadow: '0 8px #DB5B90',\n            transform: 'translateY(2px)',\n        },\n        '&:active': {\n            backgroundColor: '#EE7AAA',\n            color: '#fff',\n            boxShadow:' 0 0px #DB5B90',\n            transform: 'translateY(10px)',\n        }\n    }\n};\n\nfunction Button(props) {\n    return (\n        <button { ...props } className={props.classes.button}>\n            { props.children }\n        </button>\n    )\n}\n\nexport default withStyles(styles)(Button);","import React from 'react';\nimport axios from 'axios';\nimport {withStyles} from \"@material-ui/core\";\nimport Button from \"./Button\";\nimport {Link} from \"react-router-dom\";\nimport Gifs from \"./Gifs\";\nimport ForwardIcon from '@material-ui/icons/Forward';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = {\n    detail: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: '50px 0px 15px 0px',\n    },\n    rightSide: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 400,\n    },\n    image: {\n        borderRadius: 32,\n        height: 400,\n        alignSelf: 'center',\n    },\n    faceUploader: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    uploadedImage: {\n        alignSelf: 'center',\n        height: 200,\n        marginBottom: 16,\n    },\n    buttonCaption: {\n        fontSize: 12,\n        color: '#433f4a',\n        textDecoration: 'underline',\n        cursor: 'pointer',\n        marginTop: 8,\n    },\n    meow: {\n        marginBottom: 20,\n    },\n    tagHolder: {\n        display: 'flex',\n        marginBottom: 15,\n    },\n    tag: {\n        border: '3px solid #DB5B90',\n        margin: '0px 3px',\n        backgroundColor: '#efeef1',\n        fontWeight: 900,\n        borderRadius: 200,\n        height: 40,\n    },\n    uploader: {\n        display: 'flex',\n    },\n    targetFace: {\n        height: 50,\n    }\n};\n\nconst origin = 'http://localhost:8000';\n\n\nclass Detail extends React.Component {\n    state = {\n        url: '',\n        files: [],\n        loading: false,\n    };\n\n    componentDidMount() {\n        const { type } = this.props.match.params;\n\n        axios.get(`${origin}/types?type=${type}`).then(\n            res => this.setState({ url: res.data.url })\n        )\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        const uploadFile = (file) => {\n            const files = [...this.state.files, file];\n            this.setState({ files });\n        };\n\n        const openDialog = () => {\n          document.getElementById('upload-photo').click();\n        };\n\n        const doStuff = () => {\n            this.setState({ loading: true });\n            const formData = new FormData();\n            this.state.files.forEach((file, index) => {\n                formData.append(`file/${index}`, file, file.name);\n            });\n            formData.append(\"type\", this.props.match.params.type);\n\n            axios.post(`${origin}/make_gif/`, formData).then(res => {\n                this.setState({ url: res.data.url })\n            }).finally(() => this.setState({ loading: false }));\n        };\n\n        return (\n            <div>\n                <div className={ classes.detail }>\n                    <div style={{ width: this.state.imgWidth }}>\n                        {\n                            this.state.loading ? (\n                                <div className=\"loader\" />\n                            ) : (\n                                <img\n                                    className={ classes.image }\n                                    src={this.state.url}\n                                    onLoad={dude => {\n                                        const ratio = dude.target.naturalHeight / dude.target.naturalWidth;\n                                        this.setState({ imgWidth: 400 / ratio })\n                                    }}\n                                />\n                            )\n                        }\n                    </div>\n                    <div className={ classes.uploader }>\n                        <img\n                            className={ classes.targetFace }\n                            src=\"https://www.freepngimg.com/thumb/drake/20552-2-drake-face-transparent-thumb.png\"\n                        />\n                        <ForwardIcon />\n                    </div>\n                    {/*<div className={ classes.rightSide }>*/}\n                    {/*    <div className={ classes.faceUploader }>*/}\n                    {/*        <input type=\"file\" id=\"upload-photo\" hidden onChange={event => uploadFile(event.target.files[0])} />*/}\n                    {/*        /!*{ this.state.fileUrl && <img className={ classes.uploadedImage } src={this.state.fileUrl} /> }*!/*/}\n                    {/*        <Button onClick={ openDialog }>*/}\n                    {/*            CHOOSE A FACE*/}\n                    {/*        </Button>*/}\n                    {/*        <Button onClick={ doStuff }>*/}\n                    {/*            SEND IT*/}\n                    {/*        </Button>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n                </div>\n                <div className={classes.tagHolder}>\n                    <Chip\n                        className={classes.tag}\n                        label=\"#strut\"\n                    />\n                    <Chip\n                        className={classes.tag}\n                        label=\"#confident\"\n                    />\n                    <Chip\n                        className={classes.tag}\n                        label=\"#walk\"\n                    />\n                </div>\n                <Gifs />\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Detail);","import React from 'react';\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = {\n\n};\n\nfunction HowToFace(props) {\n    return (\n        <main className=\"help-section\">\n            <img className=\"gif\" src=\"http://i.imgur.com/DHRYpiZ.gif\" />\n            <div className=\"section-title\">\n                How to cut out a face from a picture\n            </div>\n            <ol>\n                <li>\n                    Open up your picture in Preview. If you don't have a Mac, start <a href=\"https://www.apple.com/shop/buy-mac/macbook-pro\">here.</a>\n                </li>\n                <li>\n                    Click on the toolbox or pen button the upper right hand corner, then select the lasso tool.\n                </li>\n                <img className=\"gif\" src=\"https://media.giphy.com/media/hqljpSlE9NWsCqO94Q/giphy.gif\" />\n                <li>\n                    Carefully cut the face out of the picture. When you're done, click crop and convert.\n                </li>\n                <img className=\"gif\" src=\"https://media.giphy.com/media/dxTpaE9A6TXGdRXb9u/giphy.gif\" />\n            </ol>\n        </main>\n    )\n}\n\nexport default withStyles(styles)(HowToFace)\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Gifs from './Gifs';\nimport Detail from './Detail';\nimport HowToFace from \"./HowToFace\";\n\n\nexport default function Routes(props) {\n    return (\n        <Switch>\n            <Route path=\"/how-to-cut-out-a-face\" component={ HowToFace } />\n            <Route path=\"/:type\" component={ Detail } />\n            <Route path=\"/\" component={ Gifs } />\n        </Switch>\n    );\n}\n","import React from 'react';\nimport {BrowserRouter as Router, Link} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core\";\n\nimport Routes from './Routes';\n\n\nconst styles = {\n    app: {\n        textAlign: 'center',\n        minHeight: '100vh',\n        fontSize: 'calc(10px + 2vmin)',\n        fontFamily: 'Baloo',\n        color: '#433f4a',\n        backgroundColor: '#ffd139',\n        height: '100vh',\n        justifyContent: 'space-between',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    title: {\n        fontFamily: 'Pacifico',\n        fontWeight: 'bold',\n        color: '#433f4a',\n        fontSize: '70px',\n        margin: '0px 0px 0px 30px',\n        textAlign: 'left',\n        textDecoration: 'none',\n    },\n    center: {\n        width: 1100,\n        margin: '0 auto',\n    },\n};\n\nfunction App(props) {\n    const { classes } = props;\n    return (\n        <Router>\n            <div className={ classes.app }>\n                <header className={ classes.header }>\n                    <Link className={ classes.title } to=\"/\">\n                        slackoff.\n                    </Link>\n                </header>\n                <div className={ classes.center }>\n                    <Routes />\n                </div>\n                <div />\n            </div>\n        </Router>\n    )\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './NewApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}